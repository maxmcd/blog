<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>build on Max McDonnell</title>
    <link>https://maxmcd.com/tags/build/</link>
    <description>Recent content in build on Max McDonnell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 29 Jun 2020 01:29:25 +0000</lastBuildDate>
    
	<atom:link href="https://maxmcd.com/tags/build/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strategies for Binary Relocation In Functional Build Systems</title>
      <link>https://maxmcd.com/posts/strategies-for-binary-relocation/</link>
      <pubDate>Mon, 29 Jun 2020 01:29:25 +0000</pubDate>
      
      <guid>https://maxmcd.com/posts/strategies-for-binary-relocation/</guid>
      <description>I&amp;rsquo;m currently writing a toy Nix/Guix called Bramble to learn more about the inner workings of both systems. One of the features that I wanted to include in my version was &amp;ldquo;binary relocation&amp;rdquo;.
Both Nix and Guix have hardcoded store paths that are baked into all the outputs that they produce. If we take a look at part of a simple nix Derivation you&amp;rsquo;ll see that these paths are hardcoded directly in the file.</description>
    </item>
    
  </channel>
</rss>