<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deno on Max McDonnell</title>
    <link>https://maxmcd.com/tags/deno/</link>
    <description>Recent content in Deno on Max McDonnell</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 19 Jul 2024 10:13:20 -0400</lastBuildDate>
    <atom:link href="https://maxmcd.com/tags/deno/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Can We Improve Process Per Request Performance in Node</title>
      <link>https://maxmcd.com/posts/process-per-request-performance/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://maxmcd.com/posts/process-per-request-performance/</guid>
      <description>&lt;style&gt;&#xA;    table code { background-color: initial }&#xA;    table td, table th { padding: 0.5rem }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;How fast can an HTTP server in Node run if we spawn a process for every request?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;spawn&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;node:child_process&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;node:http&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;spawn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;echo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should avoid spawning a new process for every HTTP request if at all&#xA;possible. Creating a new process or thread is expensive and could easily become&#xA;your core bottleneck. At &lt;a href=&#34;https://val.town&#34;&gt;Val Town&lt;/a&gt; there are many request&#xA;types where we spawn a new process to handle the request. While we&amp;rsquo;re working to&#xA;reduce this, it is likely that we&amp;rsquo;ll always have some requests that spawn a&#xA;process, and we&amp;rsquo;d like them to be fast.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Go on Val Town</title>
      <link>https://maxmcd.com/posts/running-go-on-val-town/</link>
      <pubDate>Wed, 29 May 2024 06:21:13 +0000</pubDate>
      <guid>https://maxmcd.com/posts/running-go-on-val-town/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://imagedelivery.net/iHX6Ovru0O7AjmyT5yZRoA/dce5f555-86e1-4f98-8471-f0641a34e200/public&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s go on a winding debugging adventure together. I thought I could get a Go HTTP handler running on &lt;a href=&#34;https://val.town&#34;&gt;Val Town&lt;/a&gt; and I thought it would be easy. Val Town is a social website to write and deploy Typescipt. Val Town doesn&amp;rsquo;t support Go, but it supports WASM. Can we make it all work!?&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;If you want to skip all this and just run Go on Val Town you can &lt;a href=&#34;https://www.val.town/v/maxm/compileAndUploadTinygoWasm&#34;&gt;follow the instructions here&lt;/a&gt;. There&amp;rsquo;s also a &lt;a href=&#34;https://www.val.town/v/maxm/tinygoWasmHelloWorld&#34;&gt;basic &amp;ldquo;Hello World&amp;rdquo;&lt;/a&gt; example, and another that&amp;rsquo;s &lt;a href=&#34;https://www.val.town/v/maxm/tinygoHttpExample&#34;&gt;much more fun and complex&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
