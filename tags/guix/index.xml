<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guix on Max McDonnell</title>
    <link>https://maxmcd.com/tags/guix/</link>
    <description>Recent content in Guix on Max McDonnell</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 02 Jul 2020 21:50:11 -0400</lastBuildDate>
    <atom:link href="https://maxmcd.com/tags/guix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Strategies for Binary Relocation In Functional Build Systems</title>
      <link>https://maxmcd.com/posts/strategies-for-binary-relocation/</link>
      <pubDate>Mon, 29 Jun 2020 01:29:25 +0000</pubDate>
      <guid>https://maxmcd.com/posts/strategies-for-binary-relocation/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m currently writing a toy Nix/Guix called &lt;a href=&#34;github.com/maxmcd/bramble&#34;&gt;Bramble&lt;/a&gt; to learn more about the inner workings of both systems. One of the features that I wanted to include in my version was &amp;ldquo;binary relocation&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Both Nix and Guix have hardcoded store paths that are baked into all the outputs that they produce. If we take a look at part of a &lt;a href=&#34;https://gist.github.com/maxmcd/d98710a0e26daaff37c565da599f5d76&#34;&gt;simple nix Derivation&lt;/a&gt; you&amp;rsquo;ll see that these paths are hardcoded directly in the file. This is an important component of Nix. Instead of searching for the default shared libraries on a system nix-built binaries are patched to only include the specific libraries they depend on. This helps ensure correctness but also means that the binary must know exactly where to look for the shared lib. Hardcoding a library path to a fixed known location like &lt;code&gt;/nix/store/zqi5prhap0qh6r4nkghnibbmkgn7sczf-libogg-1.3.4/lib/&lt;/code&gt; is an elegant way to get this done.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
